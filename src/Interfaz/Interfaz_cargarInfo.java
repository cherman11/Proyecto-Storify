/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Mundo.ArbolBinario;
import Mundo.Artista;
import Mundo.Cancion;
import Mundo.ListaCancion;
import Mundo.Registro;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author German
 */
public class Interfaz_cargarInfo extends javax.swing.JFrame {

    Interfaz_admin admin;
    ArbolBinario arbol;
    ListaCancion listaCanciones;
    File archivo;
    FileOutputStream salida;
    String informacion = "";
    Registro registrar = new Registro();
    JFileChooser seleccionArchivo;
    boolean archivoCargado = false;

    /**
     * Creates new form Interfaz_cargarInfo
     *
     * @param admin
     * @param arbol
     * @param listaCanciones
     */
    public Interfaz_cargarInfo(Interfaz_admin admin, ArbolBinario arbol, ListaCancion listaCanciones) {
        initComponents();
        setLocationRelativeTo(this);
        DialogCargar.setVisible(false);
        DialogCargar.setSize(800, 600);
        txtArea.setVisible(false);
        txtArea.setEditable(false);
        this.admin = admin;
        this.arbol = arbol;
        this.listaCanciones = listaCanciones;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogCargar = new javax.swing.JDialog();
        fileCargar = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSeleccionar = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        fileCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DialogCargarLayout = new javax.swing.GroupLayout(DialogCargar.getContentPane());
        DialogCargar.getContentPane().setLayout(DialogCargarLayout);
        DialogCargarLayout.setHorizontalGroup(
            DialogCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogCargarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                .addContainerGap())
        );
        DialogCargarLayout.setVerticalGroup(
            DialogCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogCargarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cargar Informacion");

        lblSeleccionar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblSeleccionar.setForeground(new java.awt.Color(255, 255, 255));
        lblSeleccionar.setText("Seleccionar Archivo");
        lblSeleccionar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseMoved(evt);
            }
        });
        lblSeleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblSeleccionarMousePressed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(0, 153, 255));
        btnGuardar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnRegresar.setBackground(new java.awt.Color(0, 153, 255));
        btnRegresar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnRegresar.setText("regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        txtArea.setEditable(false);
        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSeleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegresar))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnGuardar, btnRegresar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeleccionar)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnGuardar, btnRegresar});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSeleccionarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMousePressed
        DialogCargar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblSeleccionarMousePressed

    private void fileCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCargarActionPerformed
        JFileChooser selector = (JFileChooser) evt.getSource();
        String comando = evt.getActionCommand();
        if (comando.equals(JFileChooser.APPROVE_SELECTION)) {
            archivo = selector.getSelectedFile();
            archivoCargado = true;
        } else if (comando.equals(JFileChooser.CANCEL_SELECTION)) {

        }
        DialogCargar.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_fileCargarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (archivo != null&&txtArea.getText().equals("")) {
            txtArea.setVisible(true);
            try {
                FileInputStream file = new FileInputStream(archivo);
                int ascii;
                while ((ascii = file.read()) != -1) {
                    char caracter = (char) ascii;
                    informacion += caracter;
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz_cargarInfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz_cargarInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtArea.setText(informacion);
        }   // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //si no encuentra en sector Artista va a canciones: por si uno quiere agregar canciones
        Cancion cancion;
        Artista atista;
        ArrayList<Cancion> canciones = new ArrayList<>();
        ArrayList<Artista> artistas = new ArrayList<>();
        if (archivoCargado) {
            try {
                FileReader fr = new FileReader(archivo);
                BufferedReader sc = new BufferedReader(fr);
                String actual = sc.readLine();
                if (actual.equals("#Artistas")) {
                    while (true) {
                        String linea = sc.readLine();
                        if (linea != null && !linea.equals("#Canciones")) {
                            String[] datosArtista = linea.split(";");
                            boolean grupo = datosArtista[3].equals("true") ? true : false;
                            artistas.add(new Artista(Integer.parseInt(datosArtista[0]), datosArtista[1], datosArtista[2], grupo));

                        } else {
                            actual = linea;
                            break;
                        }
                    }
                }
                if (actual.equals("#Canciones")) {
                    while (true) {
                        String linea = sc.readLine();
                        if (linea != null && !linea.equals("Artistas")) {
                            String[] datosArtista = linea.split(";");
                            canciones.add(new Cancion(getArtista(datosArtista[0], artistas),
                                    datosArtista[1], datosArtista[2], datosArtista[4],
                                    datosArtista[5], datosArtista[6], getCodigo(datosArtista[0], artistas), Integer.parseInt(datosArtista[3])));
                        } else {
                            break;
                        }
                    }
                }

            } catch (FileNotFoundException ex) {
                System.err.println("el archivo no cumple con el formato");
            } catch (IOException ex) {
                System.err.println("el archivo no cumple con el formato");
            }
            
            JOptionPane.showMessageDialog(this,"Datos cargados Correctamente");
            this.dispose();
            admin.setVisible(true);
        }
        //agregando artistas a la estructura
        for (int i = 0; i < artistas.size(); i++) {
            arbol.agregarNodoArtista(artistas.get(i));
        }
        registrar.RegistrarArtistas(arbol);
        //agregando datos a la estructura
        for (int i = 0; i < canciones.size(); i++) {
            listaCanciones.agregarFinal(canciones.get(i));
        }
        registrar.RegistrarListaCancionesAdmin(listaCanciones);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void lblSeleccionarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseMoved
        lblSeleccionar.setForeground(Color.red);

    }//GEN-LAST:event_lblSeleccionarMouseMoved

    private void lblSeleccionarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseDragged
        lblSeleccionar.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_lblSeleccionarMouseDragged

    private void lblSeleccionarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseExited
        lblSeleccionar.setForeground(Color.white);       // TODO add your handling code here:

    }//GEN-LAST:event_lblSeleccionarMouseExited
    public String guardarArchivo(File archivo, String informacion) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = informacion.getBytes();
            salida.write(bytxt);
            mensaje = "Archivo guardado";
        } catch (Exception e) {
            mensaje = "Archivo no se puede guardar";
        }

        return mensaje;
    }

    private Artista getArtista(String nombre, ArrayList<Artista> artistas) {
        Artista artista = null;
        for (int i = 0; i < artistas.size(); i++) {
            if (nombre.equals(artistas.get(i).getNombre())) {
                artista = artistas.get(i);
                break;
            }
        }
        return artista;
    }

    private int getCodigo(String nombre, ArrayList<Artista> artistas) {
        int codigo = -1;
        for (int i = 0; i < artistas.size(); i++) {
            if (nombre.equals(artistas.get(i).getNombre())) {
                codigo = artistas.get(i).getCodigo();
                break;
            }
        }
        return codigo;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogCargar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JFileChooser fileCargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSeleccionar;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
