/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Mundo.ArbolBinario;
import Mundo.Artista;
import Mundo.Cancion;
import Mundo.ListaCancion;
import Mundo.NodoArtista;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author German
 */
public class Interfaz_cargarInfo extends javax.swing.JFrame {

    Interfaz_admin admin;
    ArbolBinario arbol;
    ListaCancion listaCanciones;
    File archivo;
    FileOutputStream salida;
    String informacion = "";

    /**
     * Creates new form Interfaz_cargarInfo
     *
     * @param admin
     * @param arbol
     * @param listaCanciones
     */
    public Interfaz_cargarInfo(Interfaz_admin admin, ArbolBinario arbol, ListaCancion listaCanciones) {
        initComponents();
        DialogCargar.setVisible(false);
        DialogCargar.setSize(800, 600);
        txtArea.setVisible(false);
        txtArea.setEditable(false);
        btnSalvar.setVisible(false);
        this.admin = admin;
        this.arbol = arbol;
        this.listaCanciones = listaCanciones;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogCargar = new javax.swing.JDialog();
        fileCargar = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        lblSeleccionar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        fileCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DialogCargarLayout = new javax.swing.GroupLayout(DialogCargar.getContentPane());
        DialogCargar.getContentPane().setLayout(DialogCargarLayout);
        DialogCargarLayout.setHorizontalGroup(
            DialogCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogCargarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                .addContainerGap())
        );
        DialogCargarLayout.setVerticalGroup(
            DialogCargarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogCargarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Cargar Informacion");

        lblSeleccionar.setText("Seleccionar Archivo");
        lblSeleccionar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseMoved(evt);
            }
        });
        lblSeleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSeleccionarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblSeleccionarMousePressed(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        btnRegresar.setText("regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSeleccionar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRegresar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeleccionar)
                    .addComponent(btnRegresar)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSeleccionarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMousePressed
        DialogCargar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblSeleccionarMousePressed

    private void fileCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCargarActionPerformed
        JFileChooser selector = (JFileChooser) evt.getSource();
        String comando = evt.getActionCommand();
        if (comando.equals(JFileChooser.APPROVE_SELECTION)) {
            archivo = selector.getSelectedFile();
        } else if (comando.equals(JFileChooser.CANCEL_SELECTION)) {

        }
        DialogCargar.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_fileCargarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (archivo != null) {
            txtArea.setVisible(true);
            try {
                FileInputStream file = new FileInputStream(archivo);
                int ascii;
                while ((ascii = file.read()) != -1) {
                    char caracter = (char) ascii;
                    informacion += caracter;
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interfaz_cargarInfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interfaz_cargarInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtArea.setText(informacion);
        }   // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Scanner entrada = null;
        boolean artista = false;
        boolean cancion = false;

        try {
            entrada = new Scanner(new FileReader(archivo));
            while (entrada.hasNext()) {
                String linea = entrada.nextLine();
                if (linea.equals("#Artistas")) {
                    artista = true;
                    cancion = false;
                    linea = entrada.nextLine();
                } else if (linea.equals("#Canciones")) {
                    cancion = true;
                    artista = false;
                    linea = entrada.nextLine();
                }
                if (artista) {
                    String[] arregloArtista = linea.split(";");
                    System.out.println(arregloArtista[0]);
                    int valor=0;
                    Artista artistaNuevo = new Artista(Integer.parseInt(arregloArtista[0]), arregloArtista[1], arregloArtista[2], Boolean.parseBoolean(arregloArtista[3]),valor);
                    arbol.agregarNodoArtista(artistaNuevo);
                } else if (cancion) {

                    String[] arregloCancion = linea.split(";");
                    NodoArtista artistaNodo = arbol.buscarNodo(arregloCancion[0]);
                    Artista artistaNuevo = artistaNodo.getArtista();
                    Cancion cancionNueva = new Cancion(artistaNuevo, arregloCancion[1], arregloCancion[2], arregloCancion[3], arregloCancion[4],
                            arregloCancion[5], Integer.parseInt(arregloCancion[6]), Integer.parseInt(arregloCancion[7]));
                    listaCanciones.agregarFinal(cancionNueva);
                }
            }
        } catch (FileNotFoundException ex) {
             JOptionPane.showMessageDialog(this, "No se han podido guardar los datos cargados, revice los datos a almacenar.");
            Logger.getLogger(Interfaz_cargarInfo.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < informacion.length(); i++) {
            if (informacion.charAt(i) == '#' && informacion.charAt(i + 1) == 'A') {
                 JOptionPane.showMessageDialog(this, "Se han cargado correctamente Artistas y canciones.");
                 informacion="";
                 this.dispose();
                 admin.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void lblSeleccionarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseMoved
        lblSeleccionar.setForeground(Color.red);

    }//GEN-LAST:event_lblSeleccionarMouseMoved

    private void lblSeleccionarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseDragged
        lblSeleccionar.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_lblSeleccionarMouseDragged

    private void lblSeleccionarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSeleccionarMouseExited
        lblSeleccionar.setForeground(Color.black);       // TODO add your handling code here:

    }//GEN-LAST:event_lblSeleccionarMouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtArea.setEditable(true);
        btnSalvar.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    public String guardarArchivo(File archivo, String informacion) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = informacion.getBytes();
            salida.write(bytxt);
            mensaje = "Archivo guardado";
        } catch (Exception e) {
            mensaje = "Archivo no se puede guardar";
        }

        return mensaje;
    }
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        informacion=txtArea.getText();
        txtArea.setText("");
        JOptionPane.showMessageDialog(this,guardarArchivo(archivo, informacion));
        informacion="";            
    }//GEN-LAST:event_btnSalvarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogCargar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JFileChooser fileCargar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSeleccionar;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
